version: "3"
services:
  kafka-broker:
    image: apache/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    volumes:
      - ./Data/kafka:/tmp/kafka-logs
    networks:
      - default

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8081:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka-broker:9092
    depends_on:
      - kafka-broker
    networks:
      - default
  # oracle-db:
  #   image:  container-registry.oracle.com/database/free:latest
  #   container_name: oracle-db
  #   ports:
  #     - "1521:1521"   
  #     - "5500:5500"  
  #   environment:
  #     ORACLE_PWD: Oracle123
  #   volumes:
  #     - ./oradata:/opt/oracle/oradata    
  postgres:
    image: postgres:17.5
    # restart: always
    # set shared memory limit when using docker compose
    shm_size: 128mb
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: thaotran
      POSTGRES_PASSWORD: thaotran123
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
    volumes:
      - ./Data/postgres:/var/lib/postgresql/data
      - ./init-user-db-postgres.sh:/docker-entrypoint-initdb.d/init-user-db-postgres.sh
    networks:
      - default

  hivemetastore:
    build:
      context: .
      dockerfile: Dockerfile.metastore
    image: metastore:latest
    restart: always
    ports:
      - "9083:9083"
    environment:
      SERVICE_NAME: metastore
      DB_DRIVER: postgres
      HIVE_CUSTOM_CONF_DIR: /hive_custom_conf
      SERVICE_OPTS: "-Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/metastore_db -Djavax.jdo.option.ConnectionUserName=hive -Djavax.jdo.option.ConnectionPassword=hive"
    volumes:
      - ./hive-site.xml:/hive_custom_conf/hive-site.xml
    depends_on:
      - postgres
    networks:
      - default

  kafka-connect:
    image: quay.io/debezium/connect:2.5.4.Final
    ports:
      - "8083:8083"
    depends_on:
      - kafka-broker
      - postgres
    environment:
      - BOOTSTRAP_SERVERS=kafka-broker:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      # - ENABLE_DEBEZIUM_KC_REST_EXTENSION=true
      - ENABLE_DEBEZIUM_SCRIPTING=true
      # - CONNECT_REST_EXTENSION_CLASSES=io.debezium.kcrestextension.DebeziumConnectRestExtension
    networks:
      - default
  debezium-ui:
    container_name: debezium-ui
    image: quay.io/debezium/debezium-ui:2.1.2.Final
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CONNECT_URIS=http://kafka-connect:8083
    depends_on:
      - kafka-connect
    networks:
      - default
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - ./Data/minio:/data
    networks:
      - default

  
networks:
  default:
    driver: bridge
    # volumes:
    #   - ./Data/debezium-ui:/var/lib/debezium-ui
    #   - ./Data/debezium-ui:/tmp/debezium-ui
    #   - ./Data/debezium-ui:/opt/debezium-ui
